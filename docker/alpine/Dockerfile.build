FROM node:12-alpine3.10 AS builder
RUN apk add --update-cache --repository https://alpine.global.ssl.fastly.net/alpine/v3.10/community/ \
  python build-base sqlite-dev sqlite-libs vips-dev fftw-dev gcc g++ make libc6-compat
COPY pigallery2-release /app
WORKDIR /app
RUN npm install --unsafe-perm
RUN mkdir -p /app/data/config && \
    mkdir -p /app/data/db && \
    mkdir -p /app/data/images && \
    mkdir -p /app/data/tmp


FROM node:12-alpine3.10
WORKDIR /app
# command line arg orverride the config.json with these settings
ENTRYPOINT ["node", "./src/backend/index",  \
  # after a extensive job (like video converting), pigallery calls gc, to clean up everthing as fast as possible
  "--expose-gc", \
  "--config-path=/app/data/config/config.json", \
  "--Server-Database-dbFolder=/app/data/db", \
  "--Server-Media-folder=/app/data/images", \
  "--Server-Media-tempFolder=/app/data/tmp"]
EXPOSE 80
ENV NODE_ENV=production
RUN apk add --update-cache --repository https://alpine.global.ssl.fastly.net/alpine/v3.10/community/ \
    vips ffmpeg
COPY --from=builder /app /app
VOLUME ["/app/data/config", "/app/data/db", "/app/data/images", "/app/data/tmp"]
HEALTHCHECK --interval=40s --timeout=30s --retries=3 --start-period=60s \
  CMD wget --quiet --tries=1 --no-check-certificate --spider \
  http://localhost:80/heartbeat || exit 1
