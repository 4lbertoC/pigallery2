FROM node:12-alpine AS builder
RUN apk add python build-base sqlite-dev sqlite-libs vips-dev
COPY pigallery2-release /app
WORKDIR /app
RUN npm install --unsafe-perm
RUN mkdir -p /app/data/config && \
    mkdir -p /app/data/db && \
    mkdir -p /app/data/images && \
    mkdir -p /app/data/tmp


FROM node:12-alpine
WORKDIR /app
# command line arg orverride the config.json with these settings
ENTRYPOINT ["npm", "start",  "--", \
  # after a extensive job (like video converting), pigallery calls gc, to clean up everthing as fast as possible
  "--expose-gc", \
  "--config-path=/app/data/config/config.json", \
  "--Server-Database-dbFolder=/app/data/db", \
  "--Server-Media-folder=/app/data/images", \
  "--Server-Media-tempFolder=/app/data/tmp"]
EXPOSE 80
ENV NODE_ENV=production
RUN apk add ffmpeg
COPY --from=builder /app /app
VOLUME ["/app/data/config", "/app/data/db", "/app/data/images", "/app/data/tmp"]
HEALTHCHECK --interval=30s --timeout=10s --retries=4 --start-period=60s \
  CMD wget --quiet --tries=1 --no-check-certificate --spider \
  http://localhost:80 || exit 1
